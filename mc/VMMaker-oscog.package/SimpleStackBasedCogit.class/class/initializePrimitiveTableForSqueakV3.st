class initialization
initializePrimitiveTableForSqueakV3
	"Initialize the table of primitive generators.  This does not include normal primitives implemened in the coInterpreter."
	"SimpleStackBasedCogit initializePrimitiveTableForSqueakV3"
	MaxCompiledPrimitiveIndex := 222.
	primitiveTable := CArrayAccessor on: (Array new: MaxCompiledPrimitiveIndex + 1).
	self table: primitiveTable from: 
	#(	"Integer Primitives (0-19)"
		(1 genPrimitiveAdd				1)
		(2 genPrimitiveSubtract			1)
		(3 genPrimitiveLessThan			1)
		(4 genPrimitiveGreaterThan		1)
		(5 genPrimitiveLessOrEqual		1)
		(6 genPrimitiveGreaterOrEqual	1)
		(7 genPrimitiveEqual				1)
		(8 genPrimitiveNotEqual			1)
		(9 genPrimitiveMultiply			1	processorHasMultiply:)
		(10 genPrimitiveDivide			1	processorHasDivQuoRem:)
		(11 genPrimitiveMod				1	processorHasDivQuoRem:)
		(12 genPrimitiveDiv				1	processorHasDivQuoRem:)
		(13 genPrimitiveQuo				1	processorHasDivQuoRem:)
		(14 genPrimitiveBitAnd			1)
		(15 genPrimitiveBitOr			1)
		(16 genPrimitiveBitXor			1)
		(17 genPrimitiveBitShift			1)
		"(18 primitiveMakePoint)"
		"(19 primitiveFail)"					"Guard primitive for simulation -- *must* fail"

		"LargeInteger Primitives (20-39)"
		"(20 primitiveFail)"
		"(21 primitiveAddLargeIntegers)"
		"(22 primitiveSubtractLargeIntegers)"
		"(23 primitiveLessThanLargeIntegers)"
		"(24 primitiveGreaterThanLargeIntegers)"
		"(25 primitiveLessOrEqualLargeIntegers)"
		"(26 primitiveGreaterOrEqualLargeIntegers)"
		"(27 primitiveEqualLargeIntegers)"
		"(28 primitiveNotEqualLargeIntegers)"
		"(29 primitiveMultiplyLargeIntegers)"
		"(30 primitiveDivideLargeIntegers)"
		"(31 primitiveModLargeIntegers)"
		"(32 primitiveDivLargeIntegers)"
		"(33 primitiveQuoLargeIntegers)"
		"(34 primitiveBitAndLargeIntegers)"
		"(35 primitiveBitOrLargeIntegers)"
		"(36 primitiveBitXorLargeIntegers)"
		"(37 primitiveBitShiftLargeIntegers)"

		"Float Primitives (38-59)"
		"(38 primitiveFloatAt)"
		"(39 primitiveFloatAtPut)"
		(40 genPrimitiveAsFloat				0	processorHasDoublePrecisionFloatingPointSupport:)
		(41 genPrimitiveFloatAdd				1	processorHasDoublePrecisionFloatingPointSupport:)
		(42 genPrimitiveFloatSubtract		1	processorHasDoublePrecisionFloatingPointSupport:)
		(43 genPrimitiveFloatLessThan		1	processorHasDoublePrecisionFloatingPointSupport:)
		(44 genPrimitiveFloatGreaterThan	1	processorHasDoublePrecisionFloatingPointSupport:)
		(45 genPrimitiveFloatLessOrEqual		1	processorHasDoublePrecisionFloatingPointSupport:)
		(46 genPrimitiveFloatGreaterOrEqual	1	processorHasDoublePrecisionFloatingPointSupport:)
		(47 genPrimitiveFloatEqual			1	processorHasDoublePrecisionFloatingPointSupport:)
		(48 genPrimitiveFloatNotEqual		1	processorHasDoublePrecisionFloatingPointSupport:)
		(49 genPrimitiveFloatMultiply			1	processorHasDoublePrecisionFloatingPointSupport:)
		(50 genPrimitiveFloatDivide			1	processorHasDoublePrecisionFloatingPointSupport:)
		"(51 primitiveTruncated)"
		"(52 primitiveFractionalPart)"
		"(53 primitiveExponent)"
		"(54 primitiveTimesTwoPower)"
		(55 genPrimitiveFloatSquareRoot		0	processorHasDoublePrecisionFloatingPointSupport:)
		"(56 primitiveSine)"
		"(57 primitiveArctan)"
		"(58 primitiveLogN)"
		"(59 primitiveExp)"

		"Subscript and Stream Primitives (60-67)"
		(60 genPrimitiveAt		1)
		"(61 primitiveAtPut)"
		(62 genPrimitiveSize		0)
		(63 genPrimitiveStringAt	1)
		"(64 primitiveStringAtPut)"
		"The stream primitives no longer pay their way; normal Smalltalk code is faster."
		"(65 primitiveFail)""was primitiveNext"
		"(66 primitiveFail)" "was primitiveNextPut"
		"(67 primitiveFail)" "was primitiveAtEnd"

		"StorageManagement Primitives (68-79)"
		"(68 primitiveObjectAt)"
		"(69 primitiveObjectAtPut)"
		"(70 primitiveNew)"
		"(71 primitiveNewWithArg)"
		"(72 primitiveArrayBecomeOneWay)"	"Blue Book: primitiveBecome"
		"(73 primitiveInstVarAt)"
		"(74 primitiveInstVarAtPut)"
		(75 genPrimitiveIdentityHash	0)
		"(76 primitiveStoreStackp)"					"Blue Book: primitiveAsObject"
		"(77 primitiveSomeInstance)"
		"(78 primitiveNextInstance)"
		"(79 primitiveNewMethod)"

		"Control Primitives (80-89)"
		"(80 primitiveFail)"					"Blue Book: primitiveBlockCopy"
		"(81 primitiveFail)"					"Blue Book: primitiveValue"
		"(82 primitiveFail)"					"Blue Book: primitiveValueWithArgs"
		"(83 primitivePerform)"
		"(84 primitivePerformWithArgs)"
		"(85 primitiveSignal)"
		"(86 primitiveWait)"
		"(87 primitiveResume)"
		"(88 primitiveSuspend)"
		"(89 primitiveFlushCache)"

		"Input/Output Primitives (90-109); We won't compile any of these"

		"System Primitives (110-119)"
		(110 genPrimitiveEquivalent 1)
		"(111 genPrimitiveClass)"
		"(112 primitiveBytesLeft)"
		"(113 primitiveQuit)"
		"(114 primitiveExitToDebugger)"
		"(115 primitiveChangeClass)"					"Blue Book: primitiveOopsLeft"
		"(116 primitiveFlushCacheByMethod)"
		"(117 primitiveExternalCall)"
		"(118 primitiveDoPrimitiveWithArgs)"
		"(119 primitiveFlushCacheSelective)"
			"Squeak 2.2 and earlier use 119.  Squeak 2.3 and later use 116.
			Both are supported for backward compatibility."

		"Miscellaneous Primitives (120-127); We won't compile any of these"

		"Squeak Primitives Start Here"

		"Squeak Miscellaneous Primitives (128-149); We won't compile any of these"

		"File Primitives (150-169) - NO LONGER INDEXED; We won't compile any of these"
		(169 genPrimitiveNotEquivalent 1)

		"Sound Primitives (170-199) - NO LONGER INDEXED; We won't compile any of these"

		"Old closure primitives"
		"(186 primitiveFail)" "was primitiveClosureValue"
		"(187 primitiveFail)" "was primitiveClosureValueWithArgs"

		"Perform method directly"
		"(188 primitiveExecuteMethodArgsArray)"
		"(189 primitiveExecuteMethod)"

		"Sound Primitives (continued) - NO LONGER INDEXED; We won't compile any of these"
		"(190 194 primitiveFail)"

		"Unwind primitives"
		"(195 primitiveFindNextUnwindContext)"
		"(196 primitiveTerminateTo)"
		"(197 primitiveFindHandlerContext)"
		(198 genFastPrimFail "primitiveMarkUnwindMethod")
		(199 genFastPrimFail "primitiveMarkHandlerMethod")

		"new closure primitives (were Networking primitives)"
		"(200 primitiveClosureCopyWithCopiedValues)"
		(201 genPrimitiveClosureValue) "value"
		(202 genPrimitiveClosureValue) "value:"
		(203 genPrimitiveClosureValue) "value:value:"
		(204 genPrimitiveClosureValue) "value:value:value:"
		(205 genPrimitiveClosureValue) "value:value:value:value:"
		"(206 genPrimitiveClosureValueWithArgs)" "valueWithArguments:"

		"(207 209 primitiveFail)"	"reserved for Cog primitives"

		"(210 primitiveContextAt)"
		"(211 primitiveContextAtPut)"
		"(212 primitiveContextSize)"
		"(213 217 primitiveFail)"	"reserved for Cog primitives"
		"(218 primitiveDoNamedPrimitiveWithArgs)"
		"(219 primitiveFail)"	"reserved for Cog primitives"

		"(220 primitiveFail)"		"reserved for Cog primitives"

		(221 genPrimitiveClosureValue) "valueNoContextSwitch"
		(222 genPrimitiveClosureValue) "valueNoContextSwitch:"

		"(223 229 primitiveFail)"	"reserved for Cog primitives"
	)